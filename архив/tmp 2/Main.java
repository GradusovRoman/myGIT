/*1. Класс кота из прошлого ДЗ расширить функционалом потребления пищи. У каждого кота есть аппетит,
т.е. количество еды, которое он съедает за один раз;
        2. Кот должен есть из миски. Создайте такую сущность, которая будет обладать объёмом и едой в ней,
        а также методами наполнения и получения информации о количестве еды;
        3. Метод из первого пункта ДЗ должен взаимодействовать с миской, т.е., конкретный кот ест из конкретной миски,
        уменьшая объём еды в ней;
        4. Предусмотрите проверку, при которой в миске не может получиться отрицательного количества еды
        (например, в миске 10 единиц еды, а кот пытается съесть 15);
        5. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось поесть
        (хватило еды), сытость = true;
        Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт
        (это сделано для упрощения логики программы);
        6. Создать массив котов и одну тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести
        информацию о сытости котов в консоль;
        7. Когда еда в тарелке кончается, нужно оповещать об этом и наполнять её едой.*/public class Main {
    public static void main(String[] args) {
        Cot[] cat = new Cot[5];

        Miska msk = new Miska(true, 170);

        cat[0] = new Cot(10, 50, false);
        cat[1] = new Cot(10, 30, false);
        cat[2] = new Cot(15, 60, false);
        cat[3] = new Cot(10, 40, true);
        cat[4] = new Cot(10, 50, false);

        for (int i = 0; i < cat.length; i++) { // это конструкция используется  потому что надо вывести i+1 нет имени котов
            msk.miska_Vol = msk.miskaVol(cat[i].cot_volume, msk.miskaOst); //проверка полноты миски
           if (msk.miska_Vol == false){
                msk.info();
                msk.miskaOst = msk.miskaVolume(msk.miskaOst);
                msk.miska_Vol=true; //заполнение миски
                System.out.println("Миска заполнена");
           }
            if (msk.miskaOst >= cat[i].cot_volume && cat[i].sitost == false) {
                cat[i].eatFromMiska(cat[i].appetit,cat[i].cot_volume, msk); //кот ест
             //   msk.miskaOst = msk.miskaOst - cat[i].cot_volume;
                System.out.println("Кот " + (i+1) + " поел" + ". Остаток в миске " + msk.miskaOst);
            }
            else if (cat[i].sitost =true) {System.out.println("Кот " + (i+1) + " сыт");}



        }
    }
}


